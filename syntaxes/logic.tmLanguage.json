{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Logic",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#variable"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"constant": {
			"patterns": [
				{
					"name": "constant.character.explosion.logic",
					"match": "(⊥)"
				},
				{
					"name": "constant.language.rules.pl.sub.logic",
					"match": "\\[(⇒)(sub)\\]"
				},
				{
					"name": "constant.language.rules.pl.restate.logic",
					"match": "\\[(⇒?)(restate)\\]"
				},
				{
					"name": "constant.language.rules.pl.intro.logic",
					"match": "\\[(¬|∧|∨|⇒|⇔)(intro)\\]"
				},
				{
					"name": "constant.language.rules.pl.elim.logic",
					"match": "\\[(¬|∧|∨|⇒|⇔|¬¬)(elim)\\]"
				},
				{
					"name": "constant.language.rules.fol.universe.logic",
					"match": "\\[(universe)\\]"
				},
				{
					"name": "constant.language.rules.fol.sub.logic",
					"match": "\\[∀(sub)\\]"
				},
				{
					"name": "constant.language.rules.fol.restate.logic",
					"match": "\\[∀(restate)\\]"
				},
				{
					"name": "constant.language.rules.fol.intro.logic",
					"match": "\\[(∀|∃|=)(intro)\\]"
				},
				{
					"name": "constant.language.rules.fol.elim.logic",
					"match": "\\[(∀|∃|=)(elim)\\]"
				},
				{
					"name": "constant.language.rules.fol.rename.logic",
					"match": "\\[(∀|∃)(rename)\\]"
				}
			]
		},
		"variable": {
			"patterns": [
				{
					"name": "variable.other.proposition.logic",
					"match": "\\b([ABCD])\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
				"name": "keyword.other.context.logic",
				"match": "\\b(If|Let|such that|Given)\\b"
				},
				{
					"name": "keyword.other.punctuation.logic",
					"match": "(:|\\.)"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.logical.logic",
					"match": "(¬|∧|∨|⇒|⇔)"
				},
				{
					"name": "keyword.operator.quantifier.logic",
					"match": "(∃!|∃|∀)"
				},
				{
					"name": "keyword.operator.equality.logic",
					"match": "(=)"
				}
			]
		},
		"comments": {
			"patterns": [
					{
							"name": "comment.block.logic",
							"begin": "-=",
							"end": "=-"
					},
					{
							"name": "comment.block.empty.logic",
							"match": "-==-"
					},
					{
							"name": "comment.line.logic",
							"begin": "--",
							"end": "\\n"
					}
			]
		}
	},
	"scopeName": "source.logic"
}